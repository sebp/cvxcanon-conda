{% set name = "CVXcanon" %}
{% set version = "0.1.2" %}
{% set sha256sum = "d6edadd6cb543a08c16a36e39293a0e6b9091447ecc91d1728fe07898711af51" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256sum }}
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cvxcanon = cvxcanon:main
    #
    # Would create an entry point called cvxcanon that calls cvxcanon.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  build:
    - {{ compiler('cxx') }}
  host:
    - python
    - setuptools
    - numpy
    - scipy
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - scipy

test:
  # Python imports
  imports:
    - CVXcanon
  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/jacklzhu/CVXcanon
  license: GPLv3
  summary: 'A low-level library to perform the matrix building step in cvxpy, a convex optimization modeling software.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
